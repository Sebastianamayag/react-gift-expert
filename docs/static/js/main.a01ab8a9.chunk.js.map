{"version":3,"sources":["components/AddCategory.js","helpers/getGifts.js","components/GifGridItem.js","components/GifGrid.js","hook/useFecthGifts.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototype","PropTypes","func","isRequired","getGifts","category","a","url","encodeURI","fetch","resp","json","data","gifts","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifts","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAEMA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAerC,OACQ,sBAAMC,SAVK,SAACC,GAChBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACnCN,EAAc,MAMd,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAjBQ,SAACP,GACrBF,EAAcE,EAAEQ,OAAOF,aAsB/BZ,EAAYe,UAAU,CAClBd,c,OAAce,EAAUC,KAAKC,YAGlBlB,Q,+BChCFmB,EAAQ,uCAAC,WAAMC,GAAN,uBAAAC,EAAA,6DACZC,EADY,iDACkCC,UAAUH,GAD5C,+DAEDI,MAAMF,GAFL,cAEZG,EAFY,gBAGEA,EAAKC,OAHP,uBAGXC,EAHW,EAGXA,KACDC,EAAMD,EAAKE,KAAI,SAAAC,GACjB,MAAM,CACFC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAIQ,EAAIG,OAAOC,iBAAiBZ,QARtB,kBAWXM,GAXW,4CAAD,sDCERO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAC/B,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCDHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFZ,SAACA,GAAY,IAAD,EACTlB,mBAAS,CAC/ByB,KAAK,GACLa,SAAQ,IAHuB,mBAC5BC,EAD4B,KACrBC,EADqB,KAcnC,OATAC,qBAAU,WACNxB,EAASC,GACJwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAGtB,CAACpB,IACIqB,EDXqBK,CAAc1B,GAA9Ba,EADuB,EAC5BN,KAAYa,EADgB,EAChBA,QAGnB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IACnD,sBAAKgB,UAAU,6CAAf,UAEQI,GAAU,wCAGVP,EAAOJ,KAAI,SAACC,GACR,OAAO,cAAC,EAAD,eAEKA,GADCA,EAAIC,cEQ1BgB,EAxBM,WAAM,MAEU7C,mBAAS,CAAC,cAFpB,mBAEhB8C,EAFgB,KAEL/C,EAFK,KAIvB,OACE,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ+C,EAAWnB,KAAI,SAACT,GACZ,OAAM,cAAC,EAAD,CAEJA,SAAUA,GADLA,Y,MCX7B6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.a01ab8a9.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nconst AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setinputValue] = useState('');\r\n    const handleInputChange=(e)=>{\r\n        setinputValue(e.target.value);\r\n    }\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length>2){\r\n            setCategories(cats=>[inputValue,...cats]);\r\n            setinputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n    return ( \r\n            <form onSubmit={handleSubmit}>\r\n                <input \r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n                / >\r\n            </form>\r\n     );\r\n}\r\n\r\nAddCategory.prototype={\r\n    setCategories:PropTypes.func.isRequired\r\n} \r\n\r\nexport default AddCategory;","export const getGifts=async(category)=>{\r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&api_key=bCPGP4FsTxtYdSowbHppfewkMxlxCEwG&limit=10`;\r\n    const resp=await fetch(url);\r\n    const {data}= await resp.json();\r\n    const gifts=data.map(img=>{\r\n        return{\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images.downsized_medium.url\r\n        }\r\n    });\r\n    return gifts;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifts } from '../hook/useFecthGifts';\r\nimport { GifGridItem } from '../components/GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n    const {data:images,loading}=useFetchGifts(category);\r\n\r\n    \r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__bounce\">{category}</h3>\r\n            <div className=\"card-grid animate__animated animate__flash\">\r\n                {\r\n                    loading &&<p>Loading</p>\r\n                }\r\n                {\r\n                    images.map((img)=>{\r\n                        return <GifGridItem \r\n                                key={img.id}\r\n                                {...img}\r\n                        />\r\n                    })\r\n                }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState,useEffect } from \"react\"\r\nimport { getGifts } from \"../helpers/getGifts\";\r\n\r\nexport const useFetchGifts=(category)=>{\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n    useEffect(()=>{\r\n        getGifts(category)\r\n            .then(imgs=>{\r\n                setstate({\r\n                    data:imgs,\r\n                    loading:false\r\n                })\r\n            })\r\n    },[category])\r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\nconst GifExpertApp = () => {\r\n    //const categories=['One Punch','Dragon Ball','Samurai X']\r\n    const [categories,setCategories]=useState(['One Punch']);\r\n\r\n    return (\r\n      <>\r\n          <h2>GifExpertApp</h2>\r\n          <AddCategory setCategories={setCategories}/>\r\n          <hr/>\r\n          \r\n          <ol>\r\n              {\r\n                  categories.map((category)=>{\r\n                      return<GifGrid \r\n                        key={category}\r\n                        category={category}\r\n                      />\r\n                  })\r\n              }\r\n          </ol>\r\n      </>\r\n      );\r\n  }\r\n   \r\nexport default GifExpertApp;\r\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n\n\n\n"],"sourceRoot":""}